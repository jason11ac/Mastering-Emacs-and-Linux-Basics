{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf110
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid401\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid501\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs38 \cf0 \expnd0\expndtw0\kerning0
1.1 Moving around in Emacs\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\b0\fs32 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Use Emacs to edit the file 
\f1\fs26 exer1.html
\f0\fs32 .\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Move the cursor to somewhere in the first line that contains the text "UTF-8".\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Move the cursor to somewhere in the next line that contains the text "Instructions".\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
Move the cursor to the next letter of first occurrence of the word "HTML".\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
Move the cursor to the first letter of first occurrence of the word "arrow".\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
Move the cursor to the end of the current line.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
Move the cursor to the beginning of the current line.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
Move the cursor back to somewhere in the first line of the file.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
Have you been moving the cursor using the arrow keys? If so, repeat the above, without using the arrow keys.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	10	}\expnd0\expndtw0\kerning0
Doing the above tasks with the arrow keys takes many keystrokes, or it involves holding down keys for a long time. Can you think of a way to do it with fewer keystrokes by using some of the commands available in Emacs?\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	11	}\expnd0\expndtw0\kerning0
When you are done, exit Emacs.\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\b\fs38 \cf0 1.2: Deleting text in Emacs\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\b0\fs32 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Use Emacs to edit the file 
\f1\fs26 exer2.html
\f0\fs32 . The idea is to delete its HTML comments; the resulting page should display the same text as the original.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Delete the 18th line, which is an HTML comment. 
\f1\fs26 <!-- HTML comments look like this. -->
\f0\fs32 \
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Delete the HTML comment containing the text "
\f1\fs26 DELETEME DELETEME DELETEME
\f0\fs32 ".\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
Delete the HTML comment containing the text "
\f1\fs26 http://en.wikipedia.org/wiki/HTML_comment#Comments
\f0\fs32 ".\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
There's one more HTML comment; delete that one too.\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\b\fs38 \cf0 1.3: Inserting text in Emacs\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\b0\fs32 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Use Emacs to edit the file 
\f1\fs26 exer3.html
\f0\fs32 .\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Change the first two instances of "Assignment 1" to "Assignment 37".\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Change the first instance of "UTF-8" to "US-ASCII".\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
Insert a blank line after the first line containing "
\f1\fs26 <ol>
\f0\fs32 ".\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
When you finish, save the text file and exit Emacs. As before, use the 
\f1\fs26 diff
\f0\fs32  command to check your work.\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\b\fs38 \cf0 1.4: Other editing tasks in Emacs
\b0\fs32 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Execute the command "
\f1\fs26 cat exer2.html exer2.diff >exer4.html
\f0\fs32 " to create a file 
\f1\fs26 exer4.html
\f0\fs32  that contains a copy of 
\f1\fs26 exer2.html
\f0\fs32  followed by a copy of 
\f1\fs26 exer2.diff
\f0\fs32 .\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Use Emacs to edit the file 
\f1\fs26 exer4.html
\f0\fs32 . The idea is to edit the file so that it looks identical to 
\f1\fs26 exer1.html
\f0\fs32  on a browser, but the file itself is a little bit different internally.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Go to the end of the file. Copy the new lines in the last chunk of diff output, and paste them into the correct location earlier in the file.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
Repeat the process, until the earlier part of the file is identical to what was in the original.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
Delete the last part of the file, which contains the diff output.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
\'85 except we didn't really want to do that, so undo the deletion.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
Turn the diff output into a comment, by surrounding it with "
\f1\fs26 <!--
\f0\fs32 " and "
\f1\fs26 -->
\f0\fs32 ".\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
Now let's try some search and replaces. Search the text document for the pattern "
\f1\fs26 <ol>
\f0\fs32 ". How many instances did you find? Use the search and replace function to replace them all with the initial-caps equivalent "
\f1\fs26 <Ol>
\f0\fs32 ".\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
Check your work with viewing 
\f1\fs26 exer4.html
\f0\fs32  with an HTML browser, and by running the shell command "
\f1\fs26 diff -u exer1.html exer4.html >exer4.diff
\f0\fs32 ". The only differences should be changes from "
\f1\fs26 <ol>
\f0\fs32 " to "
\f1\fs26 <Ol>
\f0\fs32 ", and a long HTML comment at the end.\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\b\fs38 \cf0 1.5: Doing commands in Emacs\
\pard\pardeftab720\partightenfactor0

\b0\fs32 \cf0 Do these tasks all within Emacs. Don't use a shell subcommand if you can avoid it.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Create a new directory 
\f1\fs26 junk
\f0\fs32  that's right under your home directory.\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
In that directory, create a C source file 
\f1\fs26 hello.c
\f0\fs32  that contains the following text. Take care to get the text exactly right, with no trailing spaces or empty lines, with the initial 
\f1\fs26 #
\f0\fs32  in the leftmost column of the first line, and with all other lines indented to match exactly as shown: 
\f1\fs26 #include <stdio.h>\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 		
\fs28 \expnd0\expndtw0\kerning0
int
\fs26 \
\ls5\ilvl0\kerning1\expnd0\expndtw0 		
\fs28 \expnd0\expndtw0\kerning0
main (void)\
\ls5\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
\{\
\ls5\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
  char n = '\\n';\
\ls5\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
  char b = '\\\\';\
\ls5\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
  char q = '"';\
\ls5\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
  char const *p = "#include <stdio.h>%cint%cmain (void)%c\{%c  	    char n = '%cn';%c  char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);%c  return 0;%c\}%c";\
       printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);\
       return 0;\
		\}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f0 \cf0 \kerning1\expnd0\expndtw0 		
\fs32 \expnd0\expndtw0\kerning0
\
{\listtext	3	}Compile this file, using the Emacs 
\f1\fs26 M-x compile
\f0\fs32  command.\
{\listtext	4	}Run the compiled program, and put its output into a new Emacs buffer named 
\f1\fs26 hello-out
\f0\fs32 .\
\ls5\ilvl0\kerning1\expnd0\expndtw0    5    \expnd0\expndtw0\kerning0
Copy this buffer's contents directly into the log that you're maintaining for this exercise.\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\b\fs38 \cf0 1.6: Running Elisp code\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\b0\fs32 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Visit Emacs's 
\f1\fs26 *scratch*
\f0\fs32  buffer.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
In the buffer, compute a random integer by invoking the 
\f1\fs26 random
\f0\fs32  function. Use 
\f1\fs26 C-j
\f0\fs32  (
\f1\fs26 eval-print-last-sexp
\f0\fs32 ) to invoke the 
\f1\fs26 random
\f0\fs32  function.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
In the buffer, assign three random integers to the global variables 
\f1\fs26 x
\f0\fs32 , 
\f1\fs26 y
\f0\fs32  and 
\f1\fs26 z
\f0\fs32 . You can start by executing 
\f1\fs26 (setq x (random))
\f0\fs32 . Again, use 
\f1\fs26 C-j
\f0\fs32 .\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
What is the product of the three variables? You can find this out by executing 
\f1\fs26 (* x y z)
\f0\fs32 . What do you observe about the result? If the answer seems to be the correct mathematical answer, try again with a different set of random integers.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
Try evaluating 
\f1\fs26 (* x y z)
\f0\fs32  again, but this time with 
\f1\fs26 M-:
\f0\fs32  (
\f1\fs26 eval-expression
\f0\fs32 ). What difference do you observe in the output?\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
Are the random integers truly random in the mathematical sense? If not, what's not random about them?\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
}